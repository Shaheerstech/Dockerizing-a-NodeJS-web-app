pr:
  autoCancel: true
  branches:
    include:
      - development

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  projectname: 'my-dev'

stages:
- stage: Deploy
  displayName: Build / Deploy Images
  jobs:
  - job: Build
    timeoutInMinutes: 120
    displayName: Build
    pool:
      name: 'Azure Pipelines'
      demands:
      - Agent.OS -equals Linux
      vmImage: ubuntu-latest

    steps:
    - checkout: self
      clean: true

    - task: Bash@3
      displayName: Build / Deploy myapp
      inputs:
        targetType: 'inline'
        script: |
          #!/bin/bash

          # Set Project that container is related to, defaults to Misc
          if [ -z ${DEP_PROJECT+x} ]; then
            DEP_PROJECT='misc'
          fi

          # Set Container Name
          DEP_NAME="myapp"

          # Set the build context
          BUILD_CONTEXT="."

          # Set the tags you want to add to the image
          TAGS="latest"

          # Set the Docker Hub username and password
          DOCKERHUB_USERNAME="shaheerahmed123"
          DOCKERHUB_ACCESS_TOKEN="dckr_pat_agZNg-0PAaDdeynCPpByXE2ri0A"

          # Check if the Docker binary exists
          if ! command -v docker &> /dev/null
          then
              echo "Error: Docker binary not found."
              exit 1 # Exit and indicate error
          fi

          # Authenticate with Docker Hub
          echo "$DOCKERHUB_ACCESS_TOKEN" | docker login --username "$DOCKERHUB_USERNAME" --password-stdin

          # Set the name of the image
          IMAGE_NAME="${DOCKERHUB_USERNAME}/${DEP_PROJECT}-${DEP_NAME}"

          # Build the Docker image
          docker build -t "$IMAGE_NAME" "$BUILD_CONTEXT"

          # Add the tags to the image
          for tag in $TAGS; do
            docker tag "$IMAGE_NAME" "$IMAGE_NAME:$tag"
            echo "Tagging Image $IMAGE_NAME:$tag"
          done

          # Push the Docker image to Docker Hub
          docker push "$IMAGE_NAME"

        workingDirectory: '$(Build.SourcesDirectory)'
